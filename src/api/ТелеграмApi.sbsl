конст БазовыйАдресБота = "https://api.telegram.org/bot"

@Глобально
структура ТгБот
    обз знч ТокенБота: Строка

    @Глобально
    метод ПолучитьИнформациюОБоте(): Строка
        пер Клиент = ТелеграмApi.НовыйКлиентHttpБота(ТокенБота)
        исп Результат = Клиент.ЗапросGet("/getMe").Выполнить()
        
        возврат Результат.Тело.ПрочитатьКакСтроку(Кодировка.Utf8)
    ;

    @Глобально
    метод ПолучитьОбновления(ИдОбновленияСмещения: Число? = Неопределено): ТгОбновленияОтветДто
        пер Клиент = ТелеграмApi.НовыйКлиентHttpБота(ТокенБота)
        пер Запрос = Клиент.ЗапросGet("/getUpdates")
        если ИдОбновленияСмещения это не Неопределено
            Запрос = Запрос.ДобавитьПараметрЗапроса("offset", ИдОбновленияСмещения.ВСтроку())
        ;
        исп Результат = Запрос.Выполнить()

        знч НастройкиЧтения = новый НастройкиЧтенияОбъектовJson()
        НастройкиЧтения.ИнициализироватьОтсутствующиеПоля = Истина

        возврат СериализацияJson.ПрочитатьОбъект(Результат.Тело, Тип<ТгОбновленияОтветДто>, НастройкиЧтения)
    ;

    @Глобально
    метод ОтправитьСообщение(Получатель: Число, ТекстСообщения: Строка): ТгОтправкаСообщенияОтветДто
        пер Клиент = ТелеграмApi.НовыйКлиентHttpБота(ТокенБота)
        знч Запрос = Клиент.ЗапросGet("/sendMessage")
            .УстановитьПараметрЗапроса("chat_id", Получатель.ВСтроку())
            .УстановитьПараметрЗапроса("text", ТекстСообщения) // TODO: лимит 4096

        исп Результат = Запрос.Выполнить()

        знч НастройкиЧтения = новый НастройкиЧтенияОбъектовJson()
        НастройкиЧтения.ИнициализироватьОтсутствующиеПоля = Истина

        возврат СериализацияJson.ПрочитатьОбъект(Результат.Тело, Тип<ТгОтправкаСообщенияОтветДто>, НастройкиЧтения)
    ;
;

@JsonОбъект(ИгнорироватьНеизвестные = Истина)
структура ТгОбновленияОтветДто
    @JsonСвойство("ok")
    знч Ок: Булево = Ложь
    @JsonСвойство("result")
    знч Результат: ЧитаемыйМассив<ТгОбновление> = []
;

@JsonОбъект(ИгнорироватьНеизвестные = Истина)
структура ТгОтправкаСообщенияОтветДто
    @JsonСвойство("ok")
    знч Ок: Булево = Ложь
    @JsonСвойство("result")
    знч Результат: ТгСообщение
;

@Глобально
@JsonОбъект(ИгнорироватьНеизвестные = Истина)
структура ТгОбновление
    @JsonСвойство("update_id")
    знч ИдОбновления: Число
    @JsonСвойство("message")
    знч Сообщение: ТгСообщение?
;

@JsonОбъект(ИгнорироватьНеизвестные = Истина)
структура ТгСообщение
    @JsonСвойство("message_id")
    знч ИдСообщения: Число
    @JsonСвойство("date")
    знч UnixДата: Число
    @JsonСвойство("text")
    знч Текст: Строка
    @JsonСвойство("from")
    знч Отправитель: ТчПользователь?
    @JsonСвойство("chat")
    знч Чат: ТчЧат?
;

@JsonОбъект(ИгнорироватьНеизвестные = Истина)
структура ТчПользователь
    @JsonСвойство("id")
    знч Ид: Число 
    @JsonСвойство("is_bot")   
    знч ЭтоБот: Булево
    @JsonСвойство("first_name")
    знч Имя: Строка = ""
    @JsonСвойство("last_name")
    знч Фамилия: Строка = ""
    @JsonСвойство("username")
    знч Логин: Строка
    @JsonСвойство("language_code")
    знч КодЯзыка: Строка?
    @JsonСвойство("is_premium")   
    знч ЕстьПремиум: Булево = Ложь
;

@JsonОбъект(ИгнорироватьНеизвестные = Истина)
структура ТчЧат
    @JsonСвойство("id")
    знч Ид: Число 
    @JsonСвойство("first_name")
    знч Имя: Строка = ""
    @JsonСвойство("last_name")
    знч Фамилия: Строка = ""
    @JsonСвойство("title")
    знч Заголовок: Строка = ""
    @JsonСвойство("username")
    знч Логин: Строка
    @JsonСвойство("type")
    знч ТипЧатаСтрокой: Строка // FIXME ТипыЧатовТелеграмм?
    @JsonСвойство("is_forum")
    знч ЭтоФорум: Булево = Ложь

    метод ТипЧата(): ТипыЧатовТелеграмм
        выбор ТипЧатаСтрокой
        когда "private"
            возврат ТипыЧатовТелеграмм.Личный
        когда "group"
            возврат ТипыЧатовТелеграмм.Группа
        когда "supergroup"
            возврат ТипыЧатовТелеграмм.СуперГруппа
        когда "channel"
            возврат ТипыЧатовТелеграмм.Канал   
        иначе
            возврат ТипыЧатовТелеграмм.Неизвестно     
        ;       
    ;
;

перечисление ТипыЧатовТелеграмм
    Личный,
    Группа,
    СуперГруппа,
    Канал,
    Неизвестно
;

метод НовыйКлиентHttpБота(ТокенБота: Строка): КлиентHttp
    знч ПараметрыЗащиты = новый ПараметрыЗащищенногоСоединения()
    ПараметрыЗащиты.БезПроверкиСертификатов = Истина
    
    возврат КлиентHttp
        .СБазовымUrl("%БазовыйАдресБота%ТокенБота")
        .СПараметрамиЗащиты(ПараметрыЗащиты)
;